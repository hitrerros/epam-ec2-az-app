version: 0.2

env:
  variables:
    S3_BUCKET: anton-khitrov-codebuild
    STACK_NAME: Anton-Khitrov-Sam-CloudFormation
    REGION: us-west-2
    ECR_REPO_NAME: anton-khitrov/final-app
    IMAGE_TAG: latest
    ECS_CONTAINER_NAME: anton-khitrov-app

phases:
  install:
    runtime-versions:
      java: corretto17
      python: 3.13
    commands:
      # Install SBT
      - echo "Installing SBT for YUM..."
      - curl -L https://www.scala-sbt.org/sbt-rpm.repo > sbt-rpm.repo
      - mv sbt-rpm.repo /etc/yum.repos.d/
      - yum install -y sbt
      - sbt sbtVersion

      # Install SAM CLI
      - curl -Lo sam.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
      - unzip -q sam.zip -d sam-installation > /dev/null
      - ./sam-installation/install
      - export PATH=$PATH:/root/.local/bin
      - sam --version

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO_NAME
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

  build:
    commands:
      - echo "Creating dummy.txt for primary artifact..."
      - echo "Primary artifact placeholder" > dummy.txt
      - echo "ðŸ”¨ Building Scala fat jar using sbt assembly..."
      - cd $CODEBUILD_SRC_DIR/scala-app
      - sbt clean assembly

      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
      - docker tag $ECR_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG

      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG

      - echo Creating imagedefinitions.json...
      - |
        printf '[{"name":"%s","imageUri":"%s"}]' "$ECS_CONTAINER_NAME" "$REPO_URI:$IMAGE_TAG" > $CODEBUILD_SRC_DIR/imagedefinitions.json

      - echo "ðŸ“¦ Packaging SAM application..."
      - cd $CODEBUILD_SRC_DIR/lambda
      - pwd
      - sam package --template-file sam_template.yaml --output-template-file packaged.yaml --s3-bucket $S3_BUCKET --region $REGION

artifacts:
  files:
    - dummy.txt
  secondary-artifacts:
    ecsArtifact:
      base-directory: .
      files:
        - imagedefinitions.json
    lambdaArtifact:
      base-directory: $CODEBUILD_SRC_DIR/lambda
      files:
        - packaged.yaml
    jarArtifact:
      base-directory: $CODEBUILD_SRC_DIR/scala-app/target/scala-2.13
      files:
        - aws-scala-app-0.1.0.jar
